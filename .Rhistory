nchar(c)
d='
<ul class="sidemenu">'
d='
<ul class="sidemenu">'
d
d
nchar(d)
'
<ul class="sidemenu">'
d='
<ul class="sidemenu">'
nchar(d)
## Loading and preprocessing the data
script to read de data set
```{r}
w<- read.csv("activity.csv",header=T,)
library(ggplot2)
library(lattice)
```
Explore and summarize the data
```{r}
str(w)
summary(w)
w$interval<- as.factor(w$interval)
```
agregate the data in days
```{r}
d<- tapply(w$steps,w$date,na.rm=T, sum)
```
plot the histogram
```{r}
hist(d, main="Number of steps per day", xlab="steps", col="red",breaks=5)
```
## What is mean total number of steps taken per day?
The mean and the median are:
```{r}
mean(d, na.rm=T)
median(d,na.rm=T)
````
## What is the average daily activity pattern?
``
the average number of step in the 5 minutes interval is:
```{r}
five<- tapply(w$steps, w$interval, na.rm=T, mean)
five<- as.data.frame(five)
five<- cbind(as.numeric(rownames(five)),five)
colnames(five)<- c("interval","steps")
````
Graphically the number of stpeps in the 5 minutes intervals.
```{r}
plot(five$interval,five$steps, type="l",
main="Mean of number of steps in 5 minutes interval",
ylab="Steps", xlab="5 minutes interval", col="blue")
```
The five minutes interval with the maximun number of steps is
```{r}
five[five$steps==max(five$steps),1]
````
with the value of
```{r}
max(five$steps)
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
setwd("~/curso/RepData_PeerAssessment1")
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
script to read de data set
```{r}
w<- read.csv("activity.csv",header=T,)
library(ggplot2)
library(lattice)
```
w
head(w,10)
attributes(w)
str(w)
summary(w)
w$interval<- as.factor(w$interval)
```
agregate the data in days
```{r}
d<- tapply(w$steps,w$date,na.rm=T, sum)
```
plot the histogram
```{r}
hist(d, main="Number of steps per day", xlab="steps", col="red",breaks=5)
```
str(w)
d
View(w)
## What is mean total number of steps taken per day?
The mean and the median are:
```{r}
mean(d, na.rm=T)
median(d,na.rm=T)
## What is the average daily activity pattern?
``
the average number of step in the 5 minutes interval is:
five<- tapply(w$steps, w$interval, na.rm=T, mean)
five
five<- as.data.frame(five)
five<- cbind(as.numeric(rownames(five)),five)
colnames(five)<- c("interval","steps")
five
plot(five$interval,five$steps, type="l",
main="Mean of number of steps in 5 minutes interval",
ylab="Steps", xlab="5 minutes interval", col="blue")
```
The five minutes interval with the maximun number of steps is
```{r}
five[five$steps==max(five$steps),1]
````
with the value of
```{r}
max(five$steps)
five[835,]
head(five,900)
round(max(five$steps),1)
str(w)
w$steps==NA
m<- w$steps==NA
tail(m)
tail (m,500)
m<- w$steps=="NA"
m
dim(m)
m
m
m<- w$steps==NA
m
w[m,]
d
five
m<- w$steps==NA
m
library("RSQLite", lib.loc="C:/Users/JoseL/Documents/R/win-library/3.1")
w[m,]
m<- w[which(w$steps==NA),]
str(m)
dim(m)
m
m<- w[which(w$steps=="NA"),]
m
m<- w[which(w$steps=="NA"),]
m
ron
install.packages("RMySQL")
head(w, 25)
dim (w)
w[1,]
w[w$steps==NA,1]
"NA">1
"NA"==1
"NA"==0
w$steps[1,]==0
w$steps[1, ]==0
w$steps[1, ]
w$steps[1,]
w$steps[1,1]
w
w[w$steps!="NA"]
w[w$steps!="NA",]
w[w$steps=="NA",1]
m-> w[w$steps=="NA",1]
m-> w[w$steps=="NA",]
w$steps=="NA"
m<- w$steps=="NA"
m
w[m,]
w[m,]
w[m,1]
w[m,1]
length(w[m,1])
length(w[w$steps=="NA",1])
length(w[w$steps=="NA",1])
length(w[w$steps=="NA",1])
View(five)
for (i in range(17568))
print i
for (i in w)
print i
for (i in w$steps)
print i
for(i in c(1,17568))
print i
for(i in 1:17568)
print i
for(i in 1:17568)
print (i)
if (w[i,1]=="NA")
w[i,1]=="NA"
five[i,2]
i=1
five[i,2]
w[i,1]=="NA"
w[i,3]
w[1,3]
w[1,2]
w[10,3]
a<-w[10,3]
a
w[1,1]
w[i,1]=mean(d, na.rm=T)
w[1,1]
View(five)
w[i,1]=mean(d, na.rm=T)7288
w[i,1]=mean(d, na.rm=T)/288
w[1,1]
head(w,3)
w[1,1]="NA"
head(w,3)
w[1,1]=NA
head(w,3)
View(w)
w<- read.csv("activity.csv",header=T,)
head(w,3)
w2<- w
w2<- w
for(i in 1:17568){
if (w2[i,1]=="NA"){
w2[i,1]=mean(d, na.rm=T)/288
}
}
w2
w2[1,1]
w2[i,1]=="NA"
w2[i,1]==NA
for(i in 1:17568){
if (w2[i,1]==NA){
w2[i,1]=mean(d, na.rm=T)/288
}
}
w2[1,1]
"NA"==NA
is.NA(na)
is.na(w2[i,1])
for(i in 1:17568){
if (is.na(w2[i,1])){
w2[i,1]=mean(d, na.rm=T)/288
}
}
w2[1,1]
View(`w2`)
weekdays(w)
weekdays(w$date)
w<- read.csv("activity.csv",header=T,)
date(w$date)
as.Date(w2$date)
w2$date=as.Date(w2$date)
weekdays(w$date)
weekdays(w2$date)
w<- read.csv("activity.csv",header=T,)
str(w)
summary(w)
w$interval<- as.factor(w$interval)
w$date<- as.Date(w$date)
d<- tapply(w$steps,w$date,na.rm=T, sum)
```
plot the histogram
```{r}
hist(d, main="Number of steps per day", xlab="steps", col="red",breaks=5)
``
the average number of step in the 5 minutes interval is:
```{r}
five<- tapply(w$steps, w$interval, na.rm=T, mean)
five<- as.data.frame(five)
five<- cbind(as.numeric(rownames(five)),five)
colnames(five)<- c("interval","steps")
````
Graphically the number of stpeps in the 5 minutes intervals.
```{r}
plot(five$interval,five$steps, type="l",
main="Mean of number of steps in 5 minutes interval",
ylab="Steps", xlab="5 minutes interval", col="blue")
```
The five minutes interval with the maximun number of steps is
```{r}
five[five$steps==max(five$steps),1]
````
with the value of
```{r}
round(max(five$steps),1)
```
## Imputing missing values
The total number of NA's is:
```{r}
length(w[w$steps=="NA",1])
```
w2<- w
for(i in 1:17568){
if (is.na(w2[i,1])){
w2[i,1]=mean(d, na.rm=T)/288
}
}
weekday(w2$date)
weekdays(w2$date)
five<- tapply(w2$steps, w2$interval, mean)
five<- as.data.frame(five)
five<- cbind(as.numeric(rownames(five)),five)
colnames(five)<- c("interval","steps")
five
``{r}
five<- tapply(w$steps, w$interval, na.rm=T, mean)
five<- as.data.frame(five)
five<- cbind(as.numeric(rownames(five)),five)
colnames(five)<- c("interval","steps")
````
wk<- subset(w2, weekdays(w2$date)=="sábado" or weekdays(w2$date)=="domingo", select=c(interval, steps))
wk<- subset(w2, weekdays(w2$date)=="sábado" | weekdays(w2$date)=="domingo", select=c(interval, steps))
wk
weekdays(w2$date)
wkd<- subset(w2,weekdays(w2$date)=="lunes" | weekdays(w2$date)=="martes",weekdays(w2$date)=="miércoles" | weekdays(w2$date)=="jueves",weekdays(w2$date)=="viernes", select=c(interval, steps) )
wk<- subset(w2, weekdays(w2$date)=="sábado" | weekdays(w2$date)=="domingo", select=c(interval, steps))
wkd<- subset(w2,weekdays(w2$date)=="lunes" | weekdays(w2$date)=="martes",weekdays(w2$date)=="miércoles" | weekdays(w2$date)=="jueves",weekdays(w2$date)=="viernes", select=c(interval, steps))
w2<- w
for(i in 1:17568){
if (is.na(w2[i,1])){
w2[i,1]=mean(d, na.rm=T)/288
}
}
w2
View(`w2`)
w2$day<-weekdays(w2$date)
wk<- subset(w2, day=="sábado" | day=="domingo", select=c(interval, steps))
wkd<- subset(w2,day=="lunes"|day=="martes"|day=="miércoles" | day=="jueves"|day=="viernes", select=c(interval, steps))
View(`w2`)
View(wk)
five1<- tapply(wk$steps, wk$interval, mean)
five1<- as.data.frame(five1)
five1<- cbind(as.numeric(rownames(five1)),five1)
colnames(five1)<- c("interval","steps")
View(five1)
for weekends:
```{r}
five2<- tapply(wkd$steps, wkd$interval, mean)
five2<- as.data.frame(five2)
five2<- cbind(as.numeric(rownames(five2)),five2)
colnames(five2)<- c("interval","steps")
par(mfrow(2,1)
par(mfrow(2,1))
par(mfrow(2,1))
par(mfrow=c(2,1))
plot(five1$interval,five1$steps, type="l",
main="Mean of number of steps in 5 minutes interval",
ylab="Steps", xlab="5 minutes interval", col="blue")
plot(five2$interval,five2$steps, type="l",
main="Mean of number of steps in 5 minutes interval",
ylab="Steps", xlab="5 minutes interval", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
ylab="Steps", xlab="5 minutes interval", col="blue")
plot(five2$interval,five2$steps, type="l",
main="Weekend",
ylab="Steps", xlab="5 minutes interval", col="blue")
par(mfrow=c(2,1))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
ylab="Steps", xlab="5 minutes interval", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
ylab="Steps", xlab="5 minutes interval", col="blue")
```{r}
par(mfrow=c(2,1))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
ylab="Steps", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
xlab="Interval", col="blue")
par(mfrow=c(2,1))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
xlab="",ylab="Steps", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
xlab="Interval",ylab="", col="blue")
par(mfrow=c(2,1))
par(mar=c(3,2,2,2))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
xlab="",ylab="Steps", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
xlab="Interval",ylab="", col="blue")
par(mar=c(3,3,2,2))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
xlab="",ylab="Steps", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
xlab="Interval",ylab="", col="blue")
par(mar=c(4,4,2,2))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
xlab="",ylab="Steps", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
xlab="Interval",ylab="", col="blue")
d2<- tapply(w2$steps,w2$date, sum)
mean(d2)
median(d2)
mean(d, na.rm=T)
median(d,na.rm=T)
## Loading and preprocessing the data
script to read de data set
```{r}
w<- read.csv("activity.csv",header=T,)
library(ggplot2)
library(lattice)
```
Explore and summarize the data
```{r}
str(w)
summary(w)
w$interval<- as.factor(w$interval)
w$date<- as.Date(w$date)
```
agregate the data in days
```{r}
d<- tapply(w$steps,w$date,na.rm=T, sum)
```
plot the histogram
```{r}
hist(d, main="Number of steps per day", xlab="steps", col="red",breaks=5)
plot the histogram
```{r}
hist(d, main="Number of steps per day", xlab="steps", col="red",breaks=5)
```
## What is mean total number of steps taken per day?
The mean and the median are:
```{r}
mean(d, na.rm=T)
median(d,na.rm=T)
````
## What is the average daily activity pattern?
``
the average number of step in the 5 minutes interval is:
```{r}
five<- tapply(w$steps, w$interval, na.rm=T, mean)
five<- as.data.frame(five)
five<- cbind(as.numeric(rownames(five)),five)
colnames(five)<- c("interval","steps")
````
Graphically the number of stpeps in the 5 minutes intervals.
```{r}
plot(five$interval,five$steps, type="l",
main="Mean of number of steps in 5 minutes interval",
ylab="Steps", xlab="5 minutes interval", col="blue")
```
The five minutes interval with the maximun number of steps is
```{r}
five[five$steps==max(five$steps),1]
````
with the value of
```{r}
round(max(five$steps),1)
```
## Imputing missing values
The total number of NA's is:
```{r}
length(w[w$steps=="NA",1])
```
The missing values are replaced with the mean value for 5 minutes interval.A new data frame were created.
```{r}
w2<- w
for(i in 1:17568){
if (is.na(w2[i,1])){
w2[i,1]=mean(d, na.rm=T)/288
}
}
```
The new values for mean and median are:
```{r}
d2<- tapply(w2$steps,w2$date, sum)
mean(d2)
median(d2)
````
The mean values are different but the median are the same
## Are there differences in activity patterns between weekdays and weekends?
In order to make the two sets of data:
```{r}
w2$day<-weekdays(w2$date)
wk<- subset(w2, day=="sábado" | day=="domingo", select=c(interval, steps))
wkd<- subset(w2,day=="lunes"|day=="martes"|day=="miércoles" | day=="jueves"|day=="viernes", select=c(interval, steps))
```
For weekdays:
```{r}
five1<- tapply(wk$steps, wk$interval, mean)
five1<- as.data.frame(five1)
five1<- cbind(as.numeric(rownames(five1)),five1)
colnames(five1)<- c("interval","steps")
````
for weekends:
```{r}
five2<- tapply(wkd$steps, wkd$interval, mean)
five2<- as.data.frame(five2)
five2<- cbind(as.numeric(rownames(five2)),five2)
colnames(five2)<- c("interval","steps")
````
Comparing the two sets of data
```{r}
par(mfrow=c(2,1))
par(mar=c(4,4,2,2))
plot(five2$interval,five2$steps, type="l",
main="Weekend",
xlab="",ylab="Steps", col="blue")
plot(five1$interval,five1$steps, type="l",
main="Weekday",
xlab="Interval",ylab="", col="blue")
```
